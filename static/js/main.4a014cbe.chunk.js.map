{"version":3,"sources":["components/Theme.tsx","components/NavBar.tsx","api/index.tsx","utils/local-storage.ts","Pages/login/LoginForm.tsx","Pages/registration/RegistrationForm.tsx","Pages/dashboard/dashboard.tsx","Pages/accounts-detail/savings-detail.container.tsx","Pages/accounts-detail/checking-detail.container.tsx","Pages/accounts-detail/money-market-detail.container.tsx","app/index.tsx","index.tsx"],"names":["Theme","createMuiTheme","palette","primary","main","secondary","useStyles","makeStyles","theme","createStyles","title","flexGrow","image","marginLeft","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","easeOut","enteringScreen","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","spacing","mixins","toolbar","justifyContent","collapseIcon","color","commerceTheme","NavBar","React","useState","open","setOpen","dashboardLink","useMemo","forwardRef","itemProps","ref","to","profileLink","checkingLink","savingsLink","moneyMarketLink","logoutLink","username","store","get","AppBar","position","className","clsx","Toolbar","Tooltip","IconButton","aria-label","edge","onClick","alt","src","undefined","aria-controls","aria-haspopup","component","Drawer","variant","anchor","classes","paper","Divider","List","ListItem","button","ListItemIcon","ListItemText","api","axios","baseURL","apis","createUser","payload","post","getUser","updateUser","id","put","deleteUser","delete","getUserById","createChecking","getChecking","getCheckingBalance","createSavings","getSavings","getSavingsBalance","createMoneyMarket","getMoneyMarket","getMoneyMarketBalance","useLocalStorageSetState","initialValue","name","Error","actualInitialValue","value","setValue","useEffect","set","textFieldMargin","margin","marginTop","marginBottom","buttonMargin","gridMargin","font","fontSize","validate","values","errors","length","password","test","LoginForm","next","setNext","setName","registerLink","formik","useFormik","initialValues","onSubmit","then","setSubmitting","window","location","reload","handleSubmit","Grid","container","item","xs","FormGroup","Typography","align","TextField","label","type","onChange","handleChange","helperText","touched","error","onBlur","handleBlur","Button","submitForm","firstName","lastName","email","phone","confirmPassword","RegistrationForm","actions","setTimeout","disabled","isSubmitting","height","divider","expansion","expansionHeader","flexBasis","balance","fontWeight","paddingTop","balancePadding","DashBoard","moneyMarket","setMoneyMarket","checking","setChecking","savings","setSavings","user","setUsername","getBalances","a","check","save","money","data","amount","Paper","elevation","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","addNewButton","combobox","layoutMargin","actionMargin","downloadButton","SavingsDetail","rows","setRows","sorting","setSorting","filters","setFilters","pageSizes","currentPage","setCurrentPage","pageSize","setPageSize","columnName","columnWidths","setColumnWidths","Date","selectedDate","setSelectedDate","action","setAction","setAmount","description","setDescription","getRows","savingRows","row","handleClose","columns","onFiltersChange","onCurrentPageChange","onPageSizeChange","onSortingChange","onColumnWidthsChange","showSortingControls","AddCircle","filename","uFEFF","target","GetApp","Dialog","onClose","DialogTitle","DialogContent","justify","event","FormControl","InputLabel","Select","labelId","MenuItem","utils","DateFnsUtils","disableToolbar","format","placeholder","date","fullWidth","DialogActions","form","concat","processDate","actionType","CheckingDetail","MoneyMarketDetail","moneyRows","App","ThemeProvider","path","exact","ReactDOM","render","document","getElementById"],"mappings":"mcAEaA,EAAQC,YAAe,CAClCC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,W,QCoBNE,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,MAAO,CACLC,SAAU,GAEZC,MAAO,CACLC,WAAY,QAEdC,KAAM,CACJC,QAAS,QAEXC,OAAQ,CACNC,WAAYT,EAAMU,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASC,iBAGzCC,YAAa,CACXC,MAAM,eAAD,OApBS,IAoBT,OACLR,WAAYT,EAAMU,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQZ,EAAMU,YAAYE,OAAOM,QACjCJ,SAAUd,EAAMU,YAAYI,SAASK,iBAEvCd,WAzBc,KA2BhBe,KAAM,CACJb,QAAS,QAEXc,OAAQ,CACNJ,MA/Bc,IAgCdK,WAAY,GAEdC,YAAa,CACXN,MAnCc,KAqChBO,aAAa,aACXjB,QAAS,OACTkB,WAAY,SACZC,QAAS1B,EAAM2B,QAAQ,EAAG,IACvB3B,EAAM4B,OAAOC,QAJN,CAKVC,eAAgB,eAElBC,aAAc,CACZC,MAAOC,EAAcvC,QAAQC,QAAQC,WAgM5BsC,EA3LA,WAAO,IAAD,EACkFpC,IAA7FI,EADW,EACXA,MAAOkB,EADI,EACJA,KAAMC,EADF,EACEA,OAAQG,EADV,EACUA,aAAcD,EADxB,EACwBA,YAAanB,EADrC,EACqCA,MAAOI,EAD5C,EAC4CA,OAAQQ,EADpD,EACoDA,YAAae,EADjE,EACiEA,aADjE,EAEKI,IAAMC,UAAS,GAFpB,mBAEZC,EAFY,KAENC,EAFM,KAYbC,EAAgBJ,IAAMK,SAC1B,kBACEL,IAAMM,YAA6C,SAACC,EAAWC,GAAZ,OACjD,kBAAC,IAAD,eAAYC,GAAG,aAAaD,IAAKA,GAASD,SAE9C,IAGIG,EAAcV,IAAMK,SACxB,kBACEL,IAAMM,YAA6C,SAACC,EAAWC,GAAZ,OACjD,kBAAC,IAAD,eAAYC,GAAG,aAAaD,IAAKA,GAASD,SAE9C,IAGII,EAAeX,IAAMK,SACzB,kBACEL,IAAMM,YAA6C,SAACC,EAAWC,GAAZ,OACjD,kBAAC,IAAD,eAAYC,GAAG,aAAaD,IAAKA,GAASD,SAE9C,IAGIK,EAAcZ,IAAMK,SACxB,kBACEL,IAAMM,YAA6C,SAACC,EAAWC,GAAZ,OACjD,kBAAC,IAAD,eAAYC,GAAG,aAAaD,IAAKA,GAASD,SAE9C,IAGIM,EAAkBb,IAAMK,SAC5B,kBACEL,IAAMM,YAA6C,SAACC,EAAWC,GAAZ,OACjD,kBAAC,IAAD,eAAYC,GAAG,aAAaD,IAAKA,GAASD,SAE9C,IAGIO,EAAad,IAAMK,SACvB,kBACEL,IAAMM,YAA6C,SAACC,EAAWC,GAAZ,OACjD,kBAAC,IAAD,eAAYC,GAAG,IAAID,IAAKA,GAASD,SAErC,IAGIQ,EAAWC,IAAMC,IAAI,YAE3B,OACE,oCACE,kBAACC,EAAA,EAAD,CAAQC,SAAS,QAAQtB,MAAM,YAAYuB,UAAWC,YAAKhD,EAAD,eACvDQ,EAAcqB,KAEf,kBAACoB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASxD,MAAM,QACb,kBAACyD,EAAA,EAAD,CACE3B,MAAM,UACN4B,aAAW,cACXC,KAAK,MACLC,QArEa,WACvBxB,GAAQ,IAqEEiB,UAAWC,YAAKnB,GAAQjB,IAExB,kBAAC,IAAD,QAGJ,yBAAK2C,IAAI,gBAAgBR,UAAWnD,EAAO4D,IAAI,qJAC/C,yBAAKT,UAAWrD,SAEA+D,IAAbf,GAAuC,KAAbA,EACzB,oCACE,kBAACQ,EAAA,EAAD,CAASxD,MAAM,aACb,kBAACyD,EAAA,EAAD,CACEC,aAAW,OACXM,gBAAc,cACdC,gBAAc,OACdC,UAAW7B,EACXP,MAAM,WAEN,kBAAC,IAAD,QAGJ,kBAAC0B,EAAA,EAAD,CAASxD,MAAM,kBACb,kBAACyD,EAAA,EAAD,CACEC,aAAW,0BACXM,gBAAc,cACdC,gBAAc,OACdC,UAAWvB,EACXb,MAAM,WAEN,kBAAC,IAAD,QAGJ,kBAAC0B,EAAA,EAAD,CAASxD,MAAM,UACb,kBAACyD,EAAA,EAAD,CACEC,aAAW,SACXM,gBAAc,cACdC,gBAAc,OACdC,UAAWnB,EACXjB,MAAM,WAEN,kBAAC,IAAD,SAIJ,OAIV,kBAACqC,EAAA,EAAD,CACEd,UAAWlC,EACXiD,QAAQ,aACRC,OAAO,OACPlC,KAAMA,EACNmC,QAAS,CACPC,MAAOlD,IAIT,yBAAKgC,UAAW/B,GACd,kBAACmC,EAAA,EAAD,CAAYG,QA7HM,WACxBxB,GAAQ,KA6HA,kBAAC,IAAD,CAAiBiB,UAAWxB,MAGhC,kBAAC2C,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAUC,QAAM,EAACT,UAAW7B,GAC1B,kBAACuC,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAcpF,QAAQ,eAExB,kBAACiF,EAAA,EAAD,CAAUC,QAAM,EAACT,UAAWvB,GAC1B,kBAACiC,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAcpF,QAAQ,sBAG1B,kBAAC+E,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAUC,QAAM,EAACT,UAAWtB,GAC1B,kBAACgC,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAcpF,QAAQ,sBAExB,kBAACiF,EAAA,EAAD,CAAUC,QAAM,EAACT,UAAWrB,GAC1B,kBAAC+B,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAcpF,QAAQ,qBAExB,kBAACiF,EAAA,EAAD,CAAUC,QAAM,EAACT,UAAWpB,GAC1B,kBAAC8B,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAcpF,QAAQ,2BAG1B,kBAAC+E,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAUC,QAAM,EAACT,UAAWnB,GAC1B,kBAAC6B,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAcpF,QAAQ,iB,qEC7P5BqF,E,OAAMC,EAAMtE,OAAO,CACvBuE,QAAS,8BAwCIC,EAjBF,CACXC,WApBwB,SAACC,GAAD,OAAkBL,EAAIM,KAAJ,QAAkBD,IAqB5DE,QApBqB,SAACF,GAAD,OAAkBL,EAAIM,KAAJ,SAAmBD,IAqB1DG,WApBwB,SAACC,EAAYJ,GAAb,OAA8BL,EAAIU,IAAJ,gBAAiBD,GAAMJ,IAqB7EM,WApBwB,SAACF,GAAD,OAAgBT,EAAIY,OAAJ,gBAAoBH,KAqB5DI,YApByB,SAAC3C,GAAD,OAAsB8B,EAAI5B,IAAJ,gBAAiBF,KAqBhE4C,eAlB4B,SAACT,EAAcnC,GAAf,OAAoC8B,EAAIM,KAAJ,uBAAyBpC,GAAYmC,IAmBrGU,YAlByB,SAAC7C,GAAD,OAAsB8B,EAAI5B,IAAJ,uBAAwBF,KAmBvE8C,mBAlBgC,SAAC9C,GAAD,OAAsB8B,EAAI5B,IAAJ,2BAA4BF,KAmBlF+C,cAjB2B,SAACZ,EAAcnC,GAAf,OAAoC8B,EAAIM,KAAJ,sBAAwBpC,GAAYmC,IAkBnGa,WAjBwB,SAAChD,GAAD,OAAsB8B,EAAI5B,IAAJ,sBAAuBF,KAkBrEiD,kBAjB+B,SAACjD,GAAD,OAAsB8B,EAAI5B,IAAJ,0BAA2BF,KAkBhFkD,kBAhB+B,SAACf,EAAcnC,GAAf,OAAoC8B,EAAIM,KAAJ,0BAA4BpC,GAAYmC,IAiB3GgB,eAhB4B,SAACnD,GAAD,OAAsB8B,EAAI5B,IAAJ,0BAA2BF,KAiB7EoD,sBAhBmC,SAACpD,GAAD,OAAsB8B,EAAI5B,IAAJ,8BAA+BF,MCrB7EqD,EAA0B,SAACC,EAAmBC,GACzD,IAAKA,EACH,MAAM,IAAIC,MAAM,oDAElB,IAAMC,OACgB1C,IAApBd,IAAMC,IAAIqD,GAAsBtD,IAAMC,IAAIqD,GAAQD,EALmB,EAM7CrE,IAAMC,SAASuE,GAN8B,mBAMhEC,EANgE,KAMzDC,EANyD,KAcvE,OANA1E,IAAM2E,WACJ,WACE3D,IAAM4D,IAAIN,EAAMG,KAElB,CAACA,EAAOH,IAEH,CAACG,EAAOC,ICRX/G,EAAYC,aAAW,kBAC3BE,YAAa,CACX+G,gBAAiB,CACfC,OAAQ,SAEV/G,MAAO,CACLgH,UAAW,WACXC,aAAc,QAEhBC,aAAc,CACZF,UAAW,UAEbrC,OAAQ,CACNqC,UAAW,QAEbG,WAAY,CACVJ,OAAQ,QACRhG,MAAO,QAETqG,KAAM,CACJC,SAAU,QAKVC,GAAW,SAACC,GAChB,IAAMC,EAAS,GAWf,OAVKD,EAAOvE,SAEDuE,EAAOvE,SAASyE,OAAS,KAClCD,EAAOxE,SAAW,oBAFlBwE,EAAOxE,SAAW,WAIfuE,EAAOG,SAEA,yCAAyCC,KAAKJ,EAAOG,YAC/DF,EAAOE,SAAW,qBAFlBF,EAAOE,SAAW,WAIbF,GA0EMI,GAvEG,WAAO,IAAD,EACqDhI,IAAnEkH,EADc,EACdA,gBAAiBI,EADH,EACGA,aAAcC,EADjB,EACiBA,WAAYxC,EAD7B,EAC6BA,OAAQ3E,EADrC,EACqCA,MAAOoH,EAD5C,EAC4CA,KAD5C,EAEEnF,IAAMC,UAAS,GAFjB,mBAEf2F,EAFe,KAETC,EAFS,OAGEzB,EAAwB,GAAI,YAH9B,mBAGfE,EAHe,KAGTwB,EAHS,KAKhBC,EAAe/F,IAAMK,SACzB,kBACEL,IAAMM,YAA6C,SAACC,EAAWC,GAAZ,OACjD,kBAAC,IAAD,eAAYC,GAAG,YAAYD,IAAKA,GAASD,SAE7C,IAGIyF,EAASC,YAAU,CACvBC,cAAe,CACbnF,SAAU,GACV0E,SAAU,IAEZJ,YACAc,SAAU,SAACb,GACTtC,EAAKI,QAAQkC,GAAQc,MAAK,WACxBN,EAAQE,EAAOV,OAAOvE,UACtBiF,EAAOK,eAAc,GACrBR,GAAQ,GACRS,OAAOC,SAASC,eAKtB,OACE,0BAAML,SAAUH,EAAOS,cACrB,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACnH,QAAS,EAAG4B,UAAW8D,GACrC,kBAACwB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAY3F,UAAWrD,EAAOiJ,MAAM,SAAS7E,QAAQ,MAArD,2BACA,kBAAC8E,EAAA,EAAD,CACE7F,UAAWyD,EACXqC,MAAM,WACN5D,GAAG,WACHgB,KAAK,WACL6C,KAAK,OACLC,SAAUpB,EAAOqB,aACjB5C,MAAOuB,EAAOV,OAAOvE,SACrBuG,WAAYtB,EAAOT,OAAOxE,UAAYiF,EAAOuB,QAAQxG,SAAWiF,EAAOT,OAAOxE,SAAW,KACzFyG,SAAOxB,EAAOuB,QAAQxG,WAAYiF,EAAOT,OAAOxE,UAChD0G,OAAQzB,EAAO0B,aAEjB,kBAACT,EAAA,EAAD,CACE7F,UAAWyD,EACXqC,MAAM,WACN5D,GAAG,WACHgB,KAAK,WACL6C,KAAK,WACLC,SAAUpB,EAAOqB,aACjB5C,MAAOuB,EAAOV,OAAOG,SACrB6B,WAAYtB,EAAOT,OAAOE,UAAYO,EAAOuB,QAAQ9B,SAAWO,EAAOT,OAAOE,SAAW,KACzF+B,SAAOxB,EAAOuB,QAAQ9B,WAAYO,EAAOT,OAAOE,UAChDgC,OAAQzB,EAAO0B,aAEjB,kBAACC,EAAA,EAAD,CAAQvG,UAAW6D,EAAckC,KAAK,SAAShF,QAAQ,YAAYtC,MAAM,UAAU8B,QAASqE,EAAO4B,YAAnG,SACA,kBAACD,EAAA,EAAD,CAAQvG,UAAWsB,EAAQyE,KAAK,SAAShF,QAAQ,YAAYtC,MAAM,YAAYoC,UAAW8D,GAA1F,cAGJ,kBAACgB,EAAA,EAAD,CAAY3F,UAAW+D,GAAOb,MAE/BsB,GAAO,kBAAC,IAAD,CAAUnF,GAAG,iBC3GrB9C,GAAYC,aAAW,kBAC3BE,YAAa,CACX+G,gBAAiB,CACfC,OAAQ,SAEVG,aAAc,CACZF,UAAW,UAEbG,WAAY,CACVJ,OAAQ,QACRhG,MAAO,QAETf,MAAO,CACLgH,UAAW,WACXC,aAAc,QAEhBG,KAAM,CACJC,SAAU,QAKVC,GAAW,SAACC,GAChB,IAAMC,EAAS,GAoCf,OAnCKD,EAAOuC,UAEDvC,EAAOuC,UAAUrC,OAAS,KACnCD,EAAOsC,UAAY,iCAFnBtC,EAAOsC,UAAY,WAIhBvC,EAAOwC,SAEDxC,EAAOwC,SAAStC,OAAS,KAClCD,EAAOuC,SAAW,iCAFlBvC,EAAOuC,SAAW,WAIfxC,EAAOvE,SAEDuE,EAAOvE,SAASyE,OAAS,KAClCD,EAAOxE,SAAW,iCAFlBwE,EAAOxE,SAAW,WAIfuE,EAAOyC,MAEA,4CAA4CrC,KAAKJ,EAAOyC,SAClExC,EAAOwC,MAAQ,yBAFfxC,EAAOwC,MAAQ,WAIZzC,EAAO0C,MAEA,YAAYtC,KAAKJ,EAAO0C,SAClCzC,EAAOyC,MAAQ,wBAFfzC,EAAOyC,MAAQ,WAIZ1C,EAAOG,SAEA,yCAAyCC,KAAKJ,EAAOG,YAC/DF,EAAOE,SAAW,2HAFlBF,EAAOE,SAAW,WAIfH,EAAO2C,gBAED3C,EAAO2C,kBAAoB3C,EAAOG,WAC3CF,EAAO0C,gBAAkB,wBAFzB1C,EAAO0C,gBAAkB,WAIpB1C,GAoIM2C,GAjIU,WAAO,IAAD,EACsCvK,KAA3DkH,EADqB,EACrBA,gBAAiBI,EADI,EACJA,aAAcC,EADV,EACUA,WAAYnH,EADtB,EACsBA,MAAOoH,EAD7B,EAC6BA,KAD7B,EAELnF,IAAMC,UAAS,GAFV,mBAEtB2F,EAFsB,KAEhBC,EAFgB,OAGLzB,EAAwB,GAAI,YAHvB,mBAGtBE,EAHsB,KAGhBwB,EAHgB,KAKvBE,EAASC,YAAU,CACvBC,cAAe,CACbnF,SAAU,GACV8G,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,MAAO,GACPvC,SAAU,GACVwC,gBAAiB,IAEnB5C,YACAc,SAAU,SAACb,EAAa6C,GACtBC,YAAW,WACTD,EAAQ9B,eAAc,KACrB,KACHrD,EAAKC,WAAWqC,GAAQc,MAAK,WAC3BN,EAAQE,EAAOV,OAAOvE,UACtBiF,EAAOK,eAAc,GACrBR,GAAQ,SAKd,OACE,0BAAMM,SAAUH,EAAOS,cACrB,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACnH,QAAS,EAAG4B,UAAW8D,GACrC,kBAACwB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAY3F,UAAWrD,EAAOiJ,MAAM,SAAS7E,QAAQ,MAArD,kBACA,kBAAC8E,EAAA,EAAD,CACE7F,UAAWyD,EACXqC,MAAM,aACN5D,GAAG,YACHgB,KAAK,YACL6C,KAAK,OACLC,SAAUpB,EAAOqB,aACjB5C,MAAOuB,EAAOV,OAAOuC,UACrBP,WAAYtB,EAAOT,OAAOsC,WAAa7B,EAAOuB,QAAQM,UAAY7B,EAAOT,OAAOsC,UAAY,KAC5FL,SAAOxB,EAAOuB,QAAQM,YAAa7B,EAAOT,OAAOsC,WACjDJ,OAAQzB,EAAO0B,aAEjB,kBAACT,EAAA,EAAD,CACE7F,UAAWyD,EACXqC,MAAM,YACN5D,GAAG,WACHgB,KAAK,WACL6C,KAAK,OACLC,SAAUpB,EAAOqB,aACjB5C,MAAOuB,EAAOV,OAAOwC,SACrBR,WAAYtB,EAAOT,OAAOuC,UAAY9B,EAAOuB,QAAQO,SAAW9B,EAAOT,OAAOuC,SAAW,KACzFN,SAAOxB,EAAOuB,QAAQO,WAAY9B,EAAOT,OAAOuC,UAChDL,OAAQzB,EAAO0B,aAEjB,kBAACT,EAAA,EAAD,CACE7F,UAAWyD,EACXqC,MAAM,WACN5D,GAAG,WACHgB,KAAK,WACL6C,KAAK,OACLC,SAAUpB,EAAOqB,aACjB5C,MAAOuB,EAAOV,OAAOvE,SACrBuG,WAAYtB,EAAOT,OAAOxE,UAAYiF,EAAOuB,QAAQxG,SAAWiF,EAAOT,OAAOxE,SAAW,KACzFyG,SAAOxB,EAAOuB,QAAQxG,WAAYiF,EAAOT,OAAOxE,UAChD0G,OAAQzB,EAAO0B,aAEjB,kBAACT,EAAA,EAAD,CACE7F,UAAWyD,EACXqC,MAAM,QACN5D,GAAG,QACHgB,KAAK,QACL6C,KAAK,OACLC,SAAUpB,EAAOqB,aACjB5C,MAAOuB,EAAOV,OAAOyC,MACrBT,WAAYtB,EAAOT,OAAOwC,OAAS/B,EAAOuB,QAAQQ,MAAQ/B,EAAOT,OAAOwC,MAAQ,KAChFP,SAAOxB,EAAOuB,QAAQQ,QAAS/B,EAAOT,OAAOwC,OAC7CN,OAAQzB,EAAO0B,aAEjB,kBAACT,EAAA,EAAD,CACE7F,UAAWyD,EACXqC,MAAM,eACN5D,GAAG,QACHgB,KAAK,QACL6C,KAAK,OACLC,SAAUpB,EAAOqB,aACjB5C,MAAOuB,EAAOV,OAAO0C,MACrBV,WAAYtB,EAAOT,OAAOyC,OAAShC,EAAOuB,QAAQS,MAAQhC,EAAOT,OAAOyC,MAAQ,KAChFR,SAAOxB,EAAOuB,QAAQS,QAAShC,EAAOT,OAAOyC,OAC7CP,OAAQzB,EAAO0B,aAEjB,kBAACT,EAAA,EAAD,CACE7F,UAAWyD,EACXqC,MAAM,WACN5D,GAAG,WACHgB,KAAK,WACL6C,KAAK,WACLC,SAAUpB,EAAOqB,aACjB5C,MAAOuB,EAAOV,OAAOG,SACrB6B,WAAYtB,EAAOT,OAAOE,UAAYO,EAAOuB,QAAQ9B,SAAWO,EAAOT,OAAOE,SAAW,KACzF+B,SAAOxB,EAAOuB,QAAQ9B,WAAYO,EAAOT,OAAOE,UAChDgC,OAAQzB,EAAO0B,aAEjB,kBAACT,EAAA,EAAD,CACE7F,UAAWyD,EACXqC,MAAM,mBACN5D,GAAG,kBACHgB,KAAK,kBACL6C,KAAK,WACLC,SAAUpB,EAAOqB,aACjB5C,MAAOuB,EAAOV,OAAO2C,gBACrBX,WAAYtB,EAAOT,OAAO0C,iBAAmBjC,EAAOuB,QAAQU,gBAAkBjC,EAAOT,OAAO0C,gBAAkB,KAC9GT,SAAOxB,EAAOuB,QAAQU,kBAAmBjC,EAAOT,OAAO0C,iBACvDR,OAAQzB,EAAO0B,aAEjB,kBAACC,EAAA,EAAD,CAAQvG,UAAW6D,EAAcoD,SAAUrC,EAAOsC,aAAcnB,KAAK,SAAShF,QAAQ,YAAYtC,MAAM,UAAU8B,QAASqE,EAAO4B,YAAlI,cAGJ,kBAACb,EAAA,EAAD,CAAY3F,UAAW+D,GAAOb,MAE/BsB,GAAO,kBAAC,IAAD,CAAUnF,GAAG,iB,yFC1LrB9C,GAAYC,aAAW,kBAC3BE,YAAa,CACXwE,MAAO,CACL/C,QAAS,OACTgJ,OAAQ,QAEVC,QAAS,CACPzD,UAAW,OACXC,aAAc,QAEhByD,UAAW,CACTzD,aAAc,QAEhB0D,gBAAiB,CACfC,UAAW,UAEbC,QAAS,CACP/I,MAAOxC,EAAME,QAAQC,QAAQC,KAC7BoL,WAAY,IACZ3K,WAAY,SACZ4K,WAAY,aAEdC,eAAgB,CACdD,WAAY,kBAyEHE,GApEG,WAAM,MAE0DrL,KAAxE2E,EAFc,EAEdA,MAAOkG,EAFO,EAEPA,QAASC,EAFF,EAEEA,UAAWC,EAFb,EAEaA,gBAAiBE,EAF9B,EAE8BA,QAASG,EAFvC,EAEuCA,eAFvC,EAKgB/I,IAAMC,SAAS,GAL/B,mBAKfgJ,EALe,KAKFC,EALE,OAMUlJ,IAAMC,SAAS,GANzB,mBAMfkJ,EANe,KAMLC,EANK,OAOQpJ,IAAMC,SAAS,GAPvB,mBAOfoJ,EAPe,KAONC,EAPM,OAQMtJ,IAAMC,SAAS,IARrB,mBAQfsJ,EARe,KAQTC,EARS,KAUhBzI,EAAWC,IAAMC,IAAI,YAErBwI,EAAW,yCAAG,mCAAAC,EAAA,sEACA1G,EAAKa,mBAAmB9C,GADxB,cACd4I,EADc,gBAED3G,EAAKgB,kBAAkBjD,GAFtB,cAEd6I,EAFc,gBAGA5G,EAAKmB,sBAAsBpD,GAH3B,cAGd8I,EAHc,iBAID7G,EAAKU,YAAY1C,IAAMC,IAAI,aAJ1B,QAIdqD,EAJc,OAMlB8E,EAAYO,EAAMG,KAAKA,KAAK,GAAGC,QAC/BT,EAAWM,EAAKE,KAAKA,KAAK,GAAGC,QAC7Bb,EAAeW,EAAMC,KAAKA,KAAK,GAAGC,QAClCP,EAAYlF,EAAKwF,KAAKA,KAAKjC,WATT,4CAAH,qDAgBjB,OAJA7H,IAAM2E,WAAU,WACd8E,OAIA,kBAACO,GAAA,EAAD,CAAOC,UAAW,EAAG7I,UAAWkB,GAC9B,kBAACyE,EAAA,EAAD,CAAY5E,QAAQ,MAApB,iBAAwCoH,GACxC,kBAAChH,EAAA,EAAD,CAASnB,UAAWoH,IACpB,kBAAC0B,GAAA,EAAD,CAAgB9I,UAAWqH,GACzB,kBAAC0B,GAAA,EAAD,CAAuB7G,GAAG,SAAS8G,WAAY,kBAAC,KAAD,OAC7C,kBAACrD,EAAA,EAAD,CAAY5E,QAAQ,KAAKf,UAAWsH,GAApC,oBACA,kBAAC3B,EAAA,EAAD,CAAY5E,QAAQ,YAAYf,UAAW2H,GAA3C,eACA,kBAAChC,EAAA,EAAD,CAAY5E,QAAQ,YAAYf,UAAWwH,GAAUO,IAEvD,kBAACkB,GAAA,EAAD,yBAKF,kBAACH,GAAA,EAAD,CAAgB9I,UAAWqH,GACzB,kBAAC0B,GAAA,EAAD,CAAuB7G,GAAG,SAAS8G,WAAY,kBAAC,KAAD,OAC7C,kBAACrD,EAAA,EAAD,CAAY5E,QAAQ,KAAKf,UAAWsH,GAApC,mBACA,kBAAC3B,EAAA,EAAD,CAAY5E,QAAQ,YAAYf,UAAW2H,GAA3C,eACA,kBAAChC,EAAA,EAAD,CAAY5E,QAAQ,YAAYf,UAAWwH,GAAUS,IAEvD,kBAACgB,GAAA,EAAD,yBAKF,kBAACH,GAAA,EAAD,CAAgB9I,UAAWqH,GACzB,kBAAC0B,GAAA,EAAD,CAAuB7G,GAAG,SAAS8G,WAAY,kBAAC,KAAD,OAC7C,kBAACrD,EAAA,EAAD,CAAY5E,QAAQ,KAAKf,UAAWsH,GAApC,wBACA,kBAAC3B,EAAA,EAAD,CAAY5E,QAAQ,YAAYf,UAAW2H,GAA3C,cACA,kBAAChC,EAAA,EAAD,CAAY5E,QAAQ,YAAYf,UAAWwH,GAAUK,IAEvD,kBAACoB,GAAA,EAAD,2B,oKCnDF1M,GAAYC,aAAW,kBAC3BE,YAAa,CACXwE,MAAO,CACL/C,QAAS,OACTgJ,OAAQ,QAEVrD,WAAY,CACVJ,OAAQ,oBAEV0D,QAAS,CACPzD,UAAW,OACXC,aAAc,QAEhB4D,QAAS,CACP/I,MAAOxC,EAAME,QAAQC,QAAQC,KAC7BoL,WAAY,IACZ7K,SAAU,GAEZsM,aAAc,CACZvF,UAAW,QACXlF,MAAOxC,EAAME,QAAQC,QAAQC,MAE/B8M,SAAU,CACRzL,MAAO,OAET0L,aAAc,CACZzF,UAAW,UAEb0F,aAAc,CACZ3F,OAAQ,QAEV4F,eAAgB,CACd7K,MAAOxC,EAAME,QAAQC,QAAQC,WAoNpBkN,GAxMO,WAAM,MAE0FhN,KAA5G2E,EAFkB,EAElBA,MAAOkG,EAFW,EAEXA,QAASI,EAFE,EAEFA,QAAS0B,EAFP,EAEOA,aAAcC,EAFrB,EAEqBA,SAAUG,EAF/B,EAE+BA,eAAgBF,EAF/C,EAE+CA,aAAcC,EAF7D,EAE6DA,aAAcvF,EAF3E,EAE2EA,WAE/FnE,EAAWC,IAAMC,IAAI,YAJD,EAOIjB,IAAMC,SAAS,GAPnB,mBAOnBoJ,EAPmB,KAOVC,EAPU,OAQFtJ,IAAMC,SAAS,IARb,mBAQnB2K,EARmB,KAQbC,EARa,OASI7K,IAAMC,SAAc,IATxB,mBASnB6K,EATmB,KASVC,EATU,OAUI/K,IAAMC,SAAc,IAVxB,mBAUnB+K,EAVmB,KAUVC,EAVU,OAWNjL,IAAMC,SAAmB,CAAC,EAAG,GAAI,GAAI,KAAlDiL,EAXmB,sBAYYlL,IAAMC,SAAS,GAZ3B,mBAYnBkL,EAZmB,KAYNC,EAZM,OAaMpL,IAAMC,SAAS,IAbrB,mBAanBoL,EAbmB,KAaTC,EAbS,OAcctL,IAAMC,SAAc,CAC1D,CAAEsL,WAAY,cAAezM,MAAO,KACpC,CAAEyM,WAAY,YAAazM,MAAO,KAClC,CAAEyM,WAAY,aAAczM,MAAO,KACnC,CAAEyM,WAAY,SAAUzM,MAAO,KAC/B,CAAEyM,WAAY,cAAezM,MAAO,OAnBZ,mBAcnB0M,EAdmB,KAcLC,EAdK,OAuBFzL,IAAMC,UAAS,GAvBb,oBAuBnBC,GAvBmB,MAuBbC,GAvBa,SAwBcH,IAAMC,SAAsB,IAAIyL,KAAK,eAxBnD,qBAwBnBC,GAxBmB,MAwBLC,GAxBK,SAyBE5L,IAAMC,SAAiB,IAzBzB,qBAyBnB4L,GAzBmB,MAyBXC,GAzBW,SA0BE9L,IAAMC,SAAiB,IA1BzB,qBA0BnB8J,GA1BmB,MA0BXgC,GA1BW,SA2BY/L,IAAMC,SAAiB,IA3BnC,qBA2BnB+L,GA3BmB,MA2BNC,GA3BM,MA6BpBxC,GAAW,yCAAG,6BAAAC,EAAA,sEACD1G,EAAKgB,kBAAkBjD,GADtB,OACd6I,EADc,OAElBN,EAAWM,EAAKE,KAAKA,KAAK,GAAGC,QAFX,2CAAH,qDAKXmC,GAAO,yCAAG,+BAAAxC,EAAA,sEACS1G,EAAKe,WAAWhD,GADzB,cACVoL,EADU,OAERC,EAAMD,EAAWrC,KAAKA,KAFd,kBAGPe,EAAQuB,IAHD,2CAAH,qDAkBPC,GAAc,WAClBlM,IAAQ,IA8CV,OALAH,IAAM2E,WAAU,WACd8E,KACAyC,OACC,IAGD,kBAAClC,GAAA,EAAD,CAAOC,UAAW,EAAG7I,UAAWkB,GAC9B,kBAACyE,EAAA,EAAD,CAAY5E,QAAQ,MAApB,mBACA,kBAACI,EAAA,EAAD,CAASnB,UAAWoH,IACpB,kBAACwB,GAAA,EAAD,CAAOC,UAAW,EAAG7I,UAAW8D,GAC9B,kBAAC,KAAD,CAAM0F,KAAMA,EAAM0B,QAhER,CACd,CAAEhI,KAAM,cAAevG,MAAO,gBAC9B,CAAEuG,KAAM,YAAavG,MAAO,cAC5B,CAAEuG,KAAM,aAAcvG,MAAO,UAC7B,CAAEuG,KAAM,SAAUvG,MAAO,UACzB,CAAEuG,KAAM,cAAevG,MAAO,iBA4DxB,kBAAC,KAAD,CAAgBiN,QAASA,EAASuB,gBAAiBtB,IACnD,kBAAC,KAAD,CACEE,YAAaA,EACbqB,oBAAqBpB,EACrBC,SAAUA,EACVoB,iBAAkBnB,IACpB,kBAAC,KAAD,MACA,kBAAC,KAAD,CACER,QAASA,EACT4B,gBAAiB3B,IAEnB,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,CACES,aAAcA,EACdmB,qBAAsBlB,IAExB,kBAAC,KAAD,CAAgBmB,qBAAmB,IACnC,kBAAC,KAAD,MACA,kBAAC,KAAD,CAAa1B,UAAWA,IACxB,kBAAC5J,EAAA,EAAD,CAASa,QAAQ,SACf,kBAAC4E,EAAA,EAAD,CAAY5E,QAAQ,aAApB,wBACA,kBAAC4E,EAAA,EAAD,CAAY3F,UAAWwH,GAAUS,GACjC,kBAAC9H,EAAA,EAAD,CAASxD,MAAM,WACb,kBAACyD,EAAA,EAAD,CAAYJ,UAAWkJ,EAAc3I,QAlF9B,WACjBxB,IAAQ,KAkFI,kBAAC0M,GAAA,EAAD,QAGHjC,EAAKpF,OAAS,EACb,kBAAC,WAAD,CACEpE,UAAWsJ,EACXZ,KAAMc,EACNkC,SAAU,2BACVC,OAAO,EACPC,OAAO,UAEP,kBAACzL,EAAA,EAAD,CAASxD,MAAM,yBACb,kBAACyD,EAAA,EAAD,CAAYJ,UAAWkJ,GACrB,kBAAC2C,GAAA,EAAD,SAIJ,QAMV,kBAAEC,GAAA,EAAF,CAAShN,KAAMA,GAAMiN,QAASd,IAC5B,kBAACe,GAAA,EAAD,4BACA,kBAACC,GAAA,EAAD,KACE,kBAAC,IAAD,CAAQ1G,WAAS,EAAC2G,QAAQ,SAASlM,UAAWoJ,GAC5C,kBAAC,IAAD,CAAQ7D,WAAS,EAAC2G,QAAQ,gBACxB,kBAACrG,EAAA,EAAD,CAAWC,MAAM,UAAUzC,MAAM,eAAe4D,UAAQ,IACxD,kBAACpB,EAAA,EAAD,CAAWC,MAAM,SAASC,KAAK,SAAS1C,MAAOsF,GAAQ3C,SAhGxC,SAACmG,GAC1BxB,GAAUwB,EAAMP,OAAOvI,WAiGf,kBAAC,IAAD,CAAQkC,WAAS,EAAC2G,QAAQ,eAAelM,UAAWoJ,GAClD,kBAACgD,GAAA,EAAD,CAAapM,UAAWmJ,GACtB,kBAACkD,GAAA,EAAD,CAAYnK,GAAG,UAAf,UACA,kBAACoK,GAAA,EAAD,CAAQC,QAAQ,SAASlJ,MAAOoH,GAAQzE,SA7G3B,SAACmG,GAC1BzB,GAAUyB,EAAMP,OAAOvI,SA6GT,kBAACmJ,GAAA,EAAD,CAAUnJ,MAAO,cAAjB,cACA,kBAACmJ,GAAA,EAAD,CAAUnJ,MAAO,WAAjB,aAGJ,kBAAC,KAAD,CAAyBoJ,MAAOC,MAC9B,kBAAC,KAAD,CACEC,gBAAc,EACd5L,QAAQ,SACR6L,OAAO,aACPlJ,OAAO,SACPxB,GAAG,qBACH2K,YAAY,qBACZxJ,MAAOkH,GACPvE,SAvHS,SAAC8G,GACxBtC,GAAgBsC,QA0HR,kBAACjH,EAAA,EAAD,CACEC,MAAM,cACNiH,WAAS,EACT/M,UAAWoJ,EACX/F,MAAOuH,GACP5E,SAxHoB,SAACmG,GAC/BtB,GAAesB,EAAMP,OAAOvI,YA0HxB,kBAAC2J,GAAA,EAAD,CAAehN,UAAWqJ,GACxB,kBAAC9C,EAAA,EAAD,CAAQhG,QAAS0K,GAAalK,QAAQ,YAAtC,WACA,kBAACwF,EAAA,EAAD,CAAQxF,QAAQ,YAAYtC,MAAM,UAAU8B,QA9G1B,WACxB,IAZqB8C,EAYf4J,EAAkB,CACtBtE,QAbmBtF,EAaGsF,GAXT,eAAX8B,GADU,IAEWyC,OAAO7J,GAIvBA,GAOPuH,YAAaA,GACbuC,YAAa5C,GACb6C,WAAY3C,IAEd7I,EAAKiB,kBAAkBoK,EAAMtN,GAC7BuF,OAAOC,SAASC,WAsGV,WCnRJ7I,GAAYC,aAAW,kBAC3BE,YAAa,CACXwE,MAAO,CACL/C,QAAS,OACTgJ,OAAQ,QAEVC,QAAS,CACPzD,UAAW,OACXC,aAAc,aAgCLyJ,GA3BQ,WAAM,MAEA9Q,KAAnB2E,EAFmB,EAEnBA,MAAOkG,EAFY,EAEZA,QAFY,EAKKxI,IAAMC,SAAS,GALpB,mBAKpBkJ,EALoB,KAKVC,EALU,KAOrBrI,EAAWC,IAAMC,IAAI,YAErBwI,EAAW,yCAAG,6BAAAC,EAAA,sEACA1G,EAAKmB,sBAAsBpD,GAD3B,OACd4I,EADc,OAElBP,EAAYO,EAAMG,KAAKA,KAAK,GAAGC,QAFb,2CAAH,qDASjB,OAJA/J,IAAM2E,WAAU,WACd8E,OAIA,kBAACO,GAAA,EAAD,CAAOC,UAAW,EAAG7I,UAAWkB,GAC9B,kBAACyE,EAAA,EAAD,CAAY5E,QAAQ,MAApB,oBACA,kBAACI,EAAA,EAAD,CAASnB,UAAWoH,IACnBW,ICGDxL,GAAYC,aAAW,kBAC3BE,YAAa,CACXwE,MAAO,CACL/C,QAAS,OACTgJ,OAAQ,QAEVrD,WAAY,CACVJ,OAAQ,oBAEV0D,QAAS,CACPzD,UAAW,OACXC,aAAc,QAEhB4D,QAAS,CACP/I,MAAOxC,EAAME,QAAQC,QAAQC,KAC7BoL,WAAY,IACZ7K,SAAU,GAEZsM,aAAc,CACZvF,UAAW,QACXlF,MAAOxC,EAAME,QAAQC,QAAQC,MAE/B8M,SAAU,CACRzL,MAAO,OAET0L,aAAc,CACZzF,UAAW,UAEb0F,aAAc,CACZ3F,OAAQ,QAEV4F,eAAgB,CACd7K,MAAOxC,EAAME,QAAQC,QAAQC,WAoNpBiR,GAxMW,WAAM,MAEsF/Q,KAA5G2E,EAFsB,EAEtBA,MAAOkG,EAFe,EAEfA,QAASI,EAFM,EAENA,QAAS0B,EAFH,EAEGA,aAAcC,EAFjB,EAEiBA,SAAUG,EAF3B,EAE2BA,eAAgBF,EAF3C,EAE2CA,aAAcC,EAFzD,EAEyDA,aAAcvF,EAFvE,EAEuEA,WAE/FnE,EAAWC,IAAMC,IAAI,YAJG,EAOQjB,IAAMC,SAAS,GAPvB,mBAOvBgJ,EAPuB,KAOVC,EAPU,OAQNlJ,IAAMC,SAAS,IART,mBAQvB2K,EARuB,KAQjBC,EARiB,OASA7K,IAAMC,SAAc,IATpB,mBASvB6K,EATuB,KASdC,EATc,OAUA/K,IAAMC,SAAc,IAVpB,mBAUvB+K,EAVuB,KAUdC,EAVc,OAWVjL,IAAMC,SAAmB,CAAC,EAAG,GAAI,GAAI,KAAlDiL,EAXuB,sBAYQlL,IAAMC,SAAS,GAZvB,mBAYvBkL,EAZuB,KAYVC,EAZU,OAaEpL,IAAMC,SAAS,IAbjB,mBAavBoL,EAbuB,KAabC,EAba,OAcUtL,IAAMC,SAAc,CAC1D,CAAEsL,WAAY,cAAezM,MAAO,KACpC,CAAEyM,WAAY,YAAazM,MAAO,KAClC,CAAEyM,WAAY,aAAczM,MAAO,KACnC,CAAEyM,WAAY,SAAUzM,MAAO,KAC/B,CAAEyM,WAAY,cAAezM,MAAO,OAnBR,mBAcvB0M,EAduB,KAcTC,EAdS,OAuBNzL,IAAMC,UAAS,GAvBT,oBAuBvBC,GAvBuB,MAuBjBC,GAvBiB,SAwBUH,IAAMC,SAAsB,IAAIyL,KAAK,eAxB/C,qBAwBvBC,GAxBuB,MAwBTC,GAxBS,SAyBF5L,IAAMC,SAAiB,IAzBrB,qBAyBvB4L,GAzBuB,MAyBfC,GAzBe,SA0BF9L,IAAMC,SAAiB,IA1BrB,qBA0BvB8J,GA1BuB,MA0BfgC,GA1Be,SA2BQ/L,IAAMC,SAAiB,IA3B/B,qBA2BvB+L,GA3BuB,MA2BVC,GA3BU,MA6BxBxC,GAAW,yCAAG,6BAAAC,EAAA,sEACA1G,EAAKmB,sBAAsBpD,GAD3B,OACd8I,EADc,OAElBX,EAAeW,EAAMC,KAAKA,KAAK,GAAGC,QAFhB,2CAAH,qDAKXmC,GAAO,yCAAG,+BAAAxC,EAAA,sEACQ1G,EAAKkB,eAAenD,GAD5B,cACV4N,EADU,OAERvC,EAAMuC,EAAU7E,KAAKA,KAFb,kBAGPe,EAAQuB,IAHD,2CAAH,qDAkBPC,GAAc,WAClBlM,IAAQ,IA8CV,OALAH,IAAM2E,WAAU,WACd8E,KACAyC,OACC,IAGD,kBAAClC,GAAA,EAAD,CAAOC,UAAW,EAAG7I,UAAWkB,GAC9B,kBAACyE,EAAA,EAAD,CAAY5E,QAAQ,MAApB,wBACA,kBAACI,EAAA,EAAD,CAASnB,UAAWoH,IACpB,kBAACwB,GAAA,EAAD,CAAOC,UAAW,EAAG7I,UAAW8D,GAC9B,kBAAC,KAAD,CAAM0F,KAAMA,EAAM0B,QAhER,CACd,CAAEhI,KAAM,cAAevG,MAAO,gBAC9B,CAAEuG,KAAM,YAAavG,MAAO,cAC5B,CAAEuG,KAAM,aAAcvG,MAAO,UAC7B,CAAEuG,KAAM,SAAUvG,MAAO,UACzB,CAAEuG,KAAM,cAAevG,MAAO,iBA4DxB,kBAAC,KAAD,CAAgBiN,QAASA,EAASuB,gBAAiBtB,IACnD,kBAAC,KAAD,CACEE,YAAaA,EACbqB,oBAAqBpB,EACrBC,SAAUA,EACVoB,iBAAkBnB,IACpB,kBAAC,KAAD,MACA,kBAAC,KAAD,CACER,QAASA,EACT4B,gBAAiB3B,IAEnB,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,CACES,aAAcA,EACdmB,qBAAsBlB,IAExB,kBAAC,KAAD,CAAgBmB,qBAAmB,IACnC,kBAAC,KAAD,MACA,kBAAC,KAAD,CAAa1B,UAAWA,IACxB,kBAAC5J,EAAA,EAAD,CAASa,QAAQ,SACf,kBAAC4E,EAAA,EAAD,CAAY5E,QAAQ,aAApB,wBACA,kBAAC4E,EAAA,EAAD,CAAY3F,UAAWwH,GAAUK,GACjC,kBAAC1H,EAAA,EAAD,CAASxD,MAAM,WACb,kBAACyD,EAAA,EAAD,CAAYJ,UAAWkJ,EAAc3I,QAlF9B,WACjBxB,IAAQ,KAkFI,kBAAC0M,GAAA,EAAD,QAGHjC,EAAKpF,OAAS,EACb,kBAAC,WAAD,CACEpE,UAAWsJ,EACXZ,KAAMc,EACNkC,SAAU,gCACVC,OAAO,EACPC,OAAO,UAEP,kBAACzL,EAAA,EAAD,CAASxD,MAAM,yBACb,kBAACyD,EAAA,EAAD,CAAYJ,UAAWkJ,GACrB,kBAAC2C,GAAA,EAAD,SAIJ,QAMV,kBAAEC,GAAA,EAAF,CAAShN,KAAMA,GAAMiN,QAASd,IAC5B,kBAACe,GAAA,EAAD,4BACA,kBAACC,GAAA,EAAD,KACE,kBAAC,IAAD,CAAQ1G,WAAS,EAAC2G,QAAQ,SAASlM,UAAWoJ,GAC5C,kBAAC,IAAD,CAAQ7D,WAAS,EAAC2G,QAAQ,gBACxB,kBAACrG,EAAA,EAAD,CAAWC,MAAM,UAAUzC,MAAM,eAAe4D,UAAQ,IACxD,kBAACpB,EAAA,EAAD,CAAWC,MAAM,SAASC,KAAK,SAAS1C,MAAOsF,GAAQ3C,SAhGxC,SAACmG,GAC1BxB,GAAUwB,EAAMP,OAAOvI,WAiGf,kBAAC,IAAD,CAAQkC,WAAS,EAAC2G,QAAQ,eAAelM,UAAWoJ,GAClD,kBAACgD,GAAA,EAAD,CAAapM,UAAWmJ,GACtB,kBAACkD,GAAA,EAAD,CAAYnK,GAAG,UAAf,UACA,kBAACoK,GAAA,EAAD,CAAQC,QAAQ,SAASlJ,MAAOoH,GAAQzE,SA7G3B,SAACmG,GAC1BzB,GAAUyB,EAAMP,OAAOvI,SA6GT,kBAACmJ,GAAA,EAAD,CAAUnJ,MAAO,cAAjB,cACA,kBAACmJ,GAAA,EAAD,CAAUnJ,MAAO,WAAjB,aAGJ,kBAAC,KAAD,CAAyBoJ,MAAOC,MAC9B,kBAAC,KAAD,CACEC,gBAAc,EACd5L,QAAQ,SACR6L,OAAO,aACPlJ,OAAO,SACPxB,GAAG,qBACH2K,YAAY,qBACZxJ,MAAOkH,GACPvE,SAvHS,SAAC8G,GACxBtC,GAAgBsC,QA0HR,kBAACjH,EAAA,EAAD,CACEC,MAAM,cACNiH,WAAS,EACT/M,UAAWoJ,EACX/F,MAAOuH,GACP5E,SAxHoB,SAACmG,GAC/BtB,GAAesB,EAAMP,OAAOvI,YA0HxB,kBAAC2J,GAAA,EAAD,CAAehN,UAAWqJ,GACxB,kBAAC9C,EAAA,EAAD,CAAQhG,QAAS0K,GAAalK,QAAQ,YAAtC,WACA,kBAACwF,EAAA,EAAD,CAAQxF,QAAQ,YAAYtC,MAAM,UAAU8B,QA9G1B,WACxB,IAZqB8C,EAYf4J,EAAkB,CACtBtE,QAbmBtF,EAaGsF,GAXT,eAAX8B,GADU,IAEWyC,OAAO7J,GAIvBA,GAOPuH,YAAaA,GACbuC,YAAa5C,GACb6C,WAAY3C,IAEd7I,EAAKiB,kBAAkBoK,EAAMtN,GAC7BuF,OAAOC,SAASC,WAsGV,WC3PKoI,GAnBH,WAEV,OACE,kBAAC,IAAD,KACE,kBAACC,GAAA,EAAD,CAAehR,MAAOR,GACpB,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOyR,KAAK,IAAIC,OAAK,EAAC9M,UAAW0D,KACjC,kBAAC,IAAD,CAAOmJ,KAAK,YAAYC,OAAK,EAAC9M,UAAWiG,KACzC,kBAAC,IAAD,CAAO4G,KAAK,aAAaC,OAAK,EAAC9M,UAAW+G,KAC1C,kBAAC,IAAD,CAAO8F,KAAK,WAAWC,OAAK,EAAC9M,UAAW0I,KACxC,kBAAC,IAAD,CAAOmE,KAAK,YAAYC,OAAK,EAAC9M,UAAWwM,KACzC,kBAAC,IAAD,CAAOK,KAAK,eAAeC,OAAK,EAAC9M,UAAWyM,SCpBtDM,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.4a014cbe.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport const Theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#006747',\r\n    },\r\n    secondary: {\r\n      main: '#fff'\r\n    }\r\n  }\r\n});\r\n","import React from 'react';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport clsx from 'clsx';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  List,\r\n  Divider,\r\n  Drawer,\r\n  Tooltip,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  ListItem,\r\n  Theme\r\n} from '@material-ui/core';\r\nimport { makeStyles, createStyles } from '@material-ui/styles';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport store from \"store\";\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport AccountBalance from '@material-ui/icons/AccountBalance';\r\nimport { Theme as commerceTheme } from './Theme';\r\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from 'react-router-dom';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    image: {\r\n      marginLeft: '1rem'\r\n    },\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: drawerWidth,\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(0, 1),\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: 'flex-start'\r\n    },\r\n    collapseIcon: {\r\n      color: commerceTheme.palette.primary.main,\r\n    }\r\n  })\r\n);\r\n\r\nconst NavBar = () => {\r\n  const { title, hide, drawer, drawerHeader, drawerPaper, image, appBar, appBarShift, collapseIcon } = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const dashboardLink = React.useMemo(\r\n    () =>\r\n      React.forwardRef<any, Omit<RouterLinkProps, 'to'>>((itemProps, ref) => (\r\n        <RouterLink to='/dashboard' ref={ref} {...itemProps} />\r\n      )),\r\n    []\r\n  );\r\n\r\n  const profileLink = React.useMemo(\r\n    () =>\r\n      React.forwardRef<any, Omit<RouterLinkProps, 'to'>>((itemProps, ref) => (\r\n        <RouterLink to='/dashboard' ref={ref} {...itemProps} />\r\n      )),\r\n    []\r\n  );\r\n\r\n  const checkingLink = React.useMemo(\r\n    () =>\r\n      React.forwardRef<any, Omit<RouterLinkProps, 'to'>>((itemProps, ref) => (\r\n        <RouterLink to='/dashboard' ref={ref} {...itemProps} />\r\n      )),\r\n    []\r\n  );\r\n\r\n  const savingsLink = React.useMemo(\r\n    () =>\r\n      React.forwardRef<any, Omit<RouterLinkProps, 'to'>>((itemProps, ref) => (\r\n        <RouterLink to='/dashboard' ref={ref} {...itemProps} />\r\n      )),\r\n    []\r\n  );\r\n\r\n  const moneyMarketLink = React.useMemo(\r\n    () =>\r\n      React.forwardRef<any, Omit<RouterLinkProps, 'to'>>((itemProps, ref) => (\r\n        <RouterLink to='/dashboard' ref={ref} {...itemProps} />\r\n      )),\r\n    []\r\n  );\r\n\r\n  const logoutLink = React.useMemo(\r\n    () =>\r\n      React.forwardRef<any, Omit<RouterLinkProps, 'to'>>((itemProps, ref) => (\r\n        <RouterLink to='/' ref={ref} {...itemProps} />\r\n      )),\r\n    []\r\n  );\r\n\r\n  const username = store.get('username');\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\" color='secondary' className={clsx(appBar, {\r\n        [appBarShift]: open,\r\n      })}>\r\n        <Toolbar>\r\n          <Tooltip title='Menu'>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              edge=\"end\"\r\n              onClick={handleDrawerOpen}\r\n              className={clsx(open && hide)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <img alt='commerce bank' className={image} src='https://www.commercebank.com/-/media/cb/images/masthead/site-logo/commerce-bank-logo-2x.png?sc=0.5&hash=54EC619B6CADAD3482F8E513AFC8F14010659DEE' />\r\n          <div className={title}></div>\r\n          {\r\n            (username !== undefined && username !== \"\") ?\r\n              <>\r\n                <Tooltip title='Dashboard'>\r\n                  <IconButton\r\n                    aria-label=\"home\"\r\n                    aria-controls=\"menu-appbar\"\r\n                    aria-haspopup=\"true\"\r\n                    component={dashboardLink}\r\n                    color=\"inherit\"\r\n                  >\r\n                    <HomeIcon />\r\n                  </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title='Manage Profile'>\r\n                  <IconButton\r\n                    aria-label=\"account of current user\"\r\n                    aria-controls=\"menu-appbar\"\r\n                    aria-haspopup=\"true\"\r\n                    component={profileLink}\r\n                    color=\"inherit\"\r\n                  >\r\n                    <AccountCircle />\r\n                  </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title='Logout'>\r\n                  <IconButton\r\n                    aria-label=\"Logout\"\r\n                    aria-controls=\"menu-appbar\"\r\n                    aria-haspopup=\"true\"\r\n                    component={logoutLink}\r\n                    color=\"inherit\"\r\n                  >\r\n                    <ExitToAppIcon />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </>\r\n              : null\r\n          }\r\n        </Toolbar>\r\n      </AppBar >\r\n      <Drawer\r\n        className={drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: drawerPaper,\r\n        }}\r\n      >\r\n        {/* Drawer */}\r\n        <div className={drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon className={collapseIcon} />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button component={dashboardLink}>\r\n            <ListItemIcon>\r\n              <HomeIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary='Dashboard' />\r\n          </ListItem>\r\n          <ListItem button component={profileLink}>\r\n            <ListItemIcon>\r\n              <AccountCircle />\r\n            </ListItemIcon>\r\n            <ListItemText primary='Account Profile' />\r\n          </ListItem>\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button component={checkingLink}>\r\n            <ListItemIcon>\r\n              <AccountBalance />\r\n            </ListItemIcon>\r\n            <ListItemText primary='Checking Account' />\r\n          </ListItem>\r\n          <ListItem button component={savingsLink}>\r\n            <ListItemIcon>\r\n              <AccountBalance />\r\n            </ListItemIcon>\r\n            <ListItemText primary='Savings Account' />\r\n          </ListItem>\r\n          <ListItem button component={moneyMarketLink}>\r\n            <ListItemIcon>\r\n              <AccountBalance />\r\n            </ListItemIcon>\r\n            <ListItemText primary='Money Market Account' />\r\n          </ListItem>\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button component={logoutLink}>\r\n            <ListItemIcon>\r\n              <ExitToAppIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary='Log Out' />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NavBar\r\n","import axios from 'axios'\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:3000/api',\r\n})\r\n\r\n// users\r\nexport const createUser = (payload: any) => api.post(`/user`, payload)\r\nexport const getUser = (payload: any) => api.post(`/users`, payload)\r\nexport const updateUser = (id: string, payload: any) => api.put(`/user/${id}`, payload)\r\nexport const deleteUser = (id: string) => api.delete(`/user/${id}`)\r\nexport const getUserById = (username: string) => api.get(`/user/${username}`)\r\n\r\n//accounts \r\nexport const createChecking = (payload: any, username: string) => api.post(`/addchecking/${username}`, payload)\r\nexport const getChecking = (username: string) => api.get(`/getchecking/${username}`)\r\nexport const getCheckingBalance = (username: string) => api.get(`/checkingbalance/${username}`)\r\n\r\nexport const createSavings = (payload: any, username: string) => api.post(`/addsavings/${username}`, payload)\r\nexport const getSavings = (username: string) => api.get(`/getsavings/${username}`)\r\nexport const getSavingsBalance = (username: string) => api.get(`/savingsbalance/${username}`)\r\n\r\nexport const createMoneyMarket = (payload: any, username: string) => api.post(`/addmoneymarket/${username}`, payload)\r\nexport const getMoneyMarket = (username: string) => api.get(`/getmoneymarket/${username}`)\r\nexport const getMoneyMarketBalance = (username: string) => api.get(`/moneymarketbalance/${username}`)\r\n\r\nconst apis = {\r\n  createUser,\r\n  getUser,\r\n  updateUser,\r\n  deleteUser,\r\n  getUserById,\r\n  createChecking,\r\n  getChecking,\r\n  getCheckingBalance,\r\n  createSavings,\r\n  getSavings,\r\n  getSavingsBalance,\r\n  createMoneyMarket,\r\n  getMoneyMarket,\r\n  getMoneyMarketBalance\r\n}\r\n\r\nexport default apis","import React from \"react\";\r\nimport store from \"store\";\r\n\r\nexport const useLocalStorageSetState = (initialValue: any, name: any) => {\r\n  if (!name) {\r\n    throw new Error(\"Name must be provided to persist to localStorage\");\r\n  }\r\n  const actualInitialValue =\r\n    store.get(name) !== undefined ? store.get(name) : initialValue;\r\n  const [value, setValue] = React.useState(actualInitialValue);\r\n\r\n  React.useEffect(\r\n    () => {\r\n      store.set(name, value);\r\n    },\r\n    [value, name]\r\n  );\r\n  return [value, setValue];\r\n};","import React from 'react'\r\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from 'react-router-dom';\r\nimport { TextField, Button, FormGroup, Grid, Typography } from '@material-ui/core'\r\nimport { useFormik } from 'formik';\r\nimport { makeStyles, createStyles } from '@material-ui/styles';\r\nimport apis from '../../api';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useLocalStorageSetState } from '../../utils/local-storage';\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    textFieldMargin: {\r\n      margin: '.5rem'\r\n    },\r\n    title: {\r\n      marginTop: '3.125rem',\r\n      marginBottom: '1rem',\r\n    },\r\n    buttonMargin: {\r\n      marginTop: '2.5rem'\r\n    },\r\n    button: {\r\n      marginTop: '1rem'\r\n    },\r\n    gridMargin: {\r\n      margin: 'unset',\r\n      width: '100%'\r\n    },\r\n    font: {\r\n      fontSize: 0\r\n    }\r\n  }),\r\n);\r\n\r\nconst validate = (values: any) => {\r\n  const errors = {} as any;\r\n  if (!values.username) {\r\n    errors.username = 'Required';\r\n  } else if (values.username.length > 20) {\r\n    errors.username = 'Invalid username';\r\n  }\r\n  if (!values.password) {\r\n    errors.password = 'Required';\r\n  } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/i.test(values.password)) {\r\n    errors.password = 'Invalid password.';\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst LoginForm = () => {\r\n  const { textFieldMargin, buttonMargin, gridMargin, button, title, font } = useStyles();\r\n  const [next, setNext] = React.useState(false)\r\n  const [name, setName] = useLocalStorageSetState('', 'username')\r\n\r\n  const registerLink = React.useMemo(\r\n    () =>\r\n      React.forwardRef<any, Omit<RouterLinkProps, 'to'>>((itemProps, ref) => (\r\n        <RouterLink to='/register' ref={ref} {...itemProps} />\r\n      )),\r\n    []\r\n  );\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: '',\r\n      password: ''\r\n    },\r\n    validate,\r\n    onSubmit: (values: any) => {\r\n      apis.getUser(values).then(() => {\r\n        setName(formik.values.username);\r\n        formik.setSubmitting(false);\r\n        setNext(true)\r\n        window.location.reload()\r\n      })\r\n    }\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <Grid container spacing={8} className={gridMargin}>\r\n        <Grid item xs={4} />\r\n        <Grid item xs={4}>\r\n          <FormGroup>\r\n            <Typography className={title} align='center' variant=\"h5\">Login Into Your Account</Typography>\r\n            <TextField\r\n              className={textFieldMargin}\r\n              label=\"Username\"\r\n              id=\"username\"\r\n              name=\"username\"\r\n              type=\"text\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.username}\r\n              helperText={formik.errors.username && formik.touched.username ? formik.errors.username : null}\r\n              error={formik.touched.username && formik.errors.username ? true : false}\r\n              onBlur={formik.handleBlur}\r\n            />\r\n            <TextField\r\n              className={textFieldMargin}\r\n              label=\"Password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.password}\r\n              helperText={formik.errors.password && formik.touched.password ? formik.errors.password : null}\r\n              error={formik.touched.password && formik.errors.password ? true : false}\r\n              onBlur={formik.handleBlur}\r\n            />\r\n            <Button className={buttonMargin} type=\"button\" variant=\"contained\" color=\"primary\" onClick={formik.submitForm}>Login</Button>\r\n            <Button className={button} type=\"button\" variant=\"contained\" color=\"secondary\" component={registerLink}>Register</Button>\r\n          </FormGroup>\r\n        </Grid>\r\n        <Typography className={font}>{name}</Typography>\r\n      </Grid>\r\n      {next ? <Redirect to=\"/dashboard\" /> : false}\r\n    </form >\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","import React from 'react'\r\nimport { TextField, Button, FormGroup, Grid, Typography } from '@material-ui/core'\r\nimport { useFormik } from 'formik';\r\nimport { makeStyles, createStyles } from '@material-ui/styles';\r\nimport apis from '../../api';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useLocalStorageSetState } from '../../utils/local-storage';\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    textFieldMargin: {\r\n      margin: '.5rem'\r\n    },\r\n    buttonMargin: {\r\n      marginTop: '2.5rem'\r\n    },\r\n    gridMargin: {\r\n      margin: 'unset',\r\n      width: '100%'\r\n    },\r\n    title: {\r\n      marginTop: '3.125rem',\r\n      marginBottom: '1rem',\r\n    },\r\n    font: {\r\n      fontSize: 0\r\n    }\r\n  }),\r\n);\r\n\r\nconst validate = (values: any) => {\r\n  const errors = {} as any;\r\n  if (!values.firstName) {\r\n    errors.firstName = 'Required';\r\n  } else if (values.firstName.length > 50) {\r\n    errors.firstName = 'Must be 50 characters or less';\r\n  }\r\n  if (!values.lastName) {\r\n    errors.lastName = 'Required';\r\n  } else if (values.lastName.length > 50) {\r\n    errors.lastName = 'Must be 50 characters or less';\r\n  }\r\n  if (!values.username) {\r\n    errors.username = 'Required';\r\n  } else if (values.username.length > 20) {\r\n    errors.username = 'Must be 20 characters or less';\r\n  }\r\n  if (!values.email) {\r\n    errors.email = 'Required';\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n    errors.email = 'Invalid email address';\r\n  }\r\n  if (!values.phone) {\r\n    errors.phone = 'Required';\r\n  } else if (!/^\\d{10}$/i.test(values.phone)) {\r\n    errors.phone = 'Invalid phone number';\r\n  }\r\n  if (!values.password) {\r\n    errors.password = 'Required';\r\n  } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/i.test(values.password)) {\r\n    errors.password = 'Invalid password. Must contain at least 8 characters, a special character, a number, one uppercase and lowercase letter';\r\n  }\r\n  if (!values.confirmPassword) {\r\n    errors.confirmPassword = 'Required';\r\n  } else if (values.confirmPassword !== values.password) {\r\n    errors.confirmPassword = 'Passwords must match';\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst RegistrationForm = () => {\r\n  const { textFieldMargin, buttonMargin, gridMargin, title, font } = useStyles();\r\n  const [next, setNext] = React.useState(false)\r\n  const [name, setName] = useLocalStorageSetState('', 'username')\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      phone: '',\r\n      password: '',\r\n      confirmPassword: ''\r\n    },\r\n    validate,\r\n    onSubmit: (values: any, actions: any) => {\r\n      setTimeout(() => {\r\n        actions.setSubmitting(false);\r\n      }, 100)\r\n      apis.createUser(values).then(() => {\r\n        setName(formik.values.username);\r\n        formik.setSubmitting(false);\r\n        setNext(true)\r\n      })\r\n    }\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <Grid container spacing={8} className={gridMargin}>\r\n        <Grid item xs={4} />\r\n        <Grid item xs={4}>\r\n          <FormGroup>\r\n            <Typography className={title} align='center' variant=\"h5\">Create Account</Typography>\r\n            <TextField\r\n              className={textFieldMargin}\r\n              label=\"First Name\"\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              type=\"text\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.firstName}\r\n              helperText={formik.errors.firstName && formik.touched.firstName ? formik.errors.firstName : null}\r\n              error={formik.touched.firstName && formik.errors.firstName ? true : false}\r\n              onBlur={formik.handleBlur}\r\n            />\r\n            <TextField\r\n              className={textFieldMargin}\r\n              label=\"Last Name\"\r\n              id=\"lastName\"\r\n              name=\"lastName\"\r\n              type=\"text\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.lastName}\r\n              helperText={formik.errors.lastName && formik.touched.lastName ? formik.errors.lastName : null}\r\n              error={formik.touched.lastName && formik.errors.lastName ? true : false}\r\n              onBlur={formik.handleBlur}\r\n            />\r\n            <TextField\r\n              className={textFieldMargin}\r\n              label=\"Username\"\r\n              id=\"username\"\r\n              name=\"username\"\r\n              type=\"text\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.username}\r\n              helperText={formik.errors.username && formik.touched.username ? formik.errors.username : null}\r\n              error={formik.touched.username && formik.errors.username ? true : false}\r\n              onBlur={formik.handleBlur}\r\n            />\r\n            <TextField\r\n              className={textFieldMargin}\r\n              label=\"Email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              type=\"text\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.email}\r\n              helperText={formik.errors.email && formik.touched.email ? formik.errors.email : null}\r\n              error={formik.touched.email && formik.errors.email ? true : false}\r\n              onBlur={formik.handleBlur}\r\n            />\r\n            <TextField\r\n              className={textFieldMargin}\r\n              label=\"Phone Number\"\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              type=\"text\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.phone}\r\n              helperText={formik.errors.phone && formik.touched.phone ? formik.errors.phone : null}\r\n              error={formik.touched.phone && formik.errors.phone ? true : false}\r\n              onBlur={formik.handleBlur}\r\n            />\r\n            <TextField\r\n              className={textFieldMargin}\r\n              label=\"Password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.password}\r\n              helperText={formik.errors.password && formik.touched.password ? formik.errors.password : null}\r\n              error={formik.touched.password && formik.errors.password ? true : false}\r\n              onBlur={formik.handleBlur}\r\n            />\r\n            <TextField\r\n              className={textFieldMargin}\r\n              label=\"Confirm Password\"\r\n              id=\"confirmPassword\"\r\n              name=\"confirmPassword\"\r\n              type=\"password\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.confirmPassword}\r\n              helperText={formik.errors.confirmPassword && formik.touched.confirmPassword ? formik.errors.confirmPassword : null}\r\n              error={formik.touched.confirmPassword && formik.errors.confirmPassword ? true : false}\r\n              onBlur={formik.handleBlur}\r\n            />\r\n            <Button className={buttonMargin} disabled={formik.isSubmitting} type=\"submit\" variant=\"contained\" color=\"primary\" onClick={formik.submitForm}>Register</Button>\r\n          </FormGroup>\r\n        </Grid>\r\n        <Typography className={font}>{name}</Typography>\r\n      </Grid>\r\n      {next ? <Redirect to=\"/dashboard\" /> : false}\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default RegistrationForm\r\n","import React from 'react'\r\nimport { Typography, Divider, Paper, ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails } from '@material-ui/core'\r\nimport { makeStyles, createStyles } from '@material-ui/styles';\r\nimport store from \"store\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Theme } from '../../components';\r\nimport apis from '../../api';\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    paper: {\r\n      padding: '1rem',\r\n      height: '100%'\r\n    },\r\n    divider: {\r\n      marginTop: '1rem',\r\n      marginBottom: '2rem'\r\n    },\r\n    expansion: {\r\n      marginBottom: '2rem'\r\n    },\r\n    expansionHeader: {\r\n      flexBasis: '33.33%'\r\n    },\r\n    balance: {\r\n      color: Theme.palette.primary.main,\r\n      fontWeight: 700,\r\n      marginLeft: '.25rem',\r\n      paddingTop: '0.1875rem'\r\n    },\r\n    balancePadding: {\r\n      paddingTop: '0.1875rem'\r\n    }\r\n  })\r\n);\r\n\r\nconst DashBoard = () => {\r\n  // styles\r\n  const { paper, divider, expansion, expansionHeader, balance, balancePadding } = useStyles()\r\n\r\n  // Hooks\r\n  const [moneyMarket, setMoneyMarket] = React.useState(0);\r\n  const [checking, setChecking] = React.useState(0);\r\n  const [savings, setSavings] = React.useState(0);\r\n  const [user, setUsername] = React.useState('');\r\n\r\n  const username = store.get('username');\r\n\r\n  const getBalances = async () => {\r\n    let check = await apis.getCheckingBalance(username);\r\n    let save = await apis.getSavingsBalance(username);\r\n    let money = await apis.getMoneyMarketBalance(username);\r\n    let name = await apis.getUserById(store.get('username'));\r\n\r\n    setChecking(check.data.data[0].amount);\r\n    setSavings(save.data.data[0].amount);\r\n    setMoneyMarket(money.data.data[0].amount);\r\n    setUsername(name.data.data.firstName);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    getBalances();\r\n  })\r\n\r\n  return (\r\n    <Paper elevation={0} className={paper}>\r\n      <Typography variant='h5'>Welcome back, {user}</Typography>\r\n      <Divider className={divider} />\r\n      <ExpansionPanel className={expansion}>\r\n        <ExpansionPanelSummary id=\"panel1\" expandIcon={<ExpandMoreIcon />}>\r\n          <Typography variant='h6' className={expansionHeader}>Checking Account</Typography>\r\n          <Typography variant='subtitle1' className={balancePadding}>Balance: $ </Typography>\r\n          <Typography variant='subtitle1' className={balance}>{checking}</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          Summary Details\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n\r\n      <ExpansionPanel className={expansion}>\r\n        <ExpansionPanelSummary id=\"panel2\" expandIcon={<ExpandMoreIcon />}>\r\n          <Typography variant='h6' className={expansionHeader}>Savings Account</Typography>\r\n          <Typography variant='subtitle1' className={balancePadding}>Balance: $ </Typography>\r\n          <Typography variant='subtitle1' className={balance}>{savings}</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          Summary Details\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n\r\n      <ExpansionPanel className={expansion}>\r\n        <ExpansionPanelSummary id=\"panel3\" expandIcon={<ExpandMoreIcon />}>\r\n          <Typography variant='h6' className={expansionHeader}>Money Market Account</Typography>\r\n          <Typography variant='subtitle1' className={balancePadding}>Balance: $</Typography>\r\n          <Typography variant='subtitle1' className={balance}>{moneyMarket}</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          Summary Details\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    </Paper >\r\n  )\r\n}\r\n\r\nexport default DashBoard\r\n","import React from 'react'\r\nimport {\r\n  Divider,\r\n  Paper,\r\n  Grid as Layout,\r\n  Typography,\r\n  Button,\r\n  IconButton,\r\n  FormControl,\r\n  Toolbar,\r\n  MenuItem,\r\n  Tooltip,\r\n  TextField,\r\n  Select,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  InputLabel\r\n} from '@material-ui/core'\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableHeaderRow,\r\n  TableColumnResizing,\r\n  TableFilterRow,\r\n  PagingPanel\r\n} from '@devexpress/dx-react-grid-material-ui';\r\nimport {\r\n  IntegratedSorting,\r\n  SortingState,\r\n  IntegratedFiltering,\r\n  FilteringState,\r\n  PagingState,\r\n  IntegratedPaging\r\n} from '@devexpress/dx-react-grid';\r\nimport { CSVLink } from \"react-csv\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { AddCircle, GetApp } from '@material-ui/icons';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport { makeStyles, createStyles } from '@material-ui/styles';\r\nimport store from \"store\";\r\nimport apis from '../../api';\r\nimport { Theme } from '../../components';\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    paper: {\r\n      padding: '1rem',\r\n      height: '100%'\r\n    },\r\n    gridMargin: {\r\n      margin: '0 1rem 1rem 1rem'\r\n    },\r\n    divider: {\r\n      marginTop: '1rem',\r\n      marginBottom: '2rem'\r\n    },\r\n    balance: {\r\n      color: Theme.palette.primary.main,\r\n      fontWeight: 700,\r\n      flexGrow: 1\r\n    },\r\n    addNewButton: {\r\n      marginTop: '.5rem',\r\n      color: Theme.palette.primary.main\r\n    },\r\n    combobox: {\r\n      width: '40%'\r\n    },\r\n    layoutMargin: {\r\n      marginTop: '1.5rem'\r\n    },\r\n    actionMargin: {\r\n      margin: '1rem'\r\n    },\r\n    downloadButton: {\r\n      color: Theme.palette.primary.main\r\n    },\r\n  })\r\n);\r\n\r\ninterface FormProps {\r\n  amount: any,\r\n  description: any,\r\n  processDate: any,\r\n  actionType: any\r\n}\r\n\r\nconst SavingsDetail = () => {\r\n  // styles\r\n  const { paper, divider, balance, addNewButton, combobox, downloadButton, layoutMargin, actionMargin, gridMargin } = useStyles()\r\n\r\n  const username = store.get('username');\r\n\r\n  // Grid Hooks\r\n  const [savings, setSavings] = React.useState(0);\r\n  const [rows, setRows] = React.useState([]);\r\n  const [sorting, setSorting] = React.useState<any>([])\r\n  const [filters, setFilters] = React.useState<any>([]);\r\n  const [pageSizes] = React.useState<number[]>([5, 10, 15, 25]);\r\n  const [currentPage, setCurrentPage] = React.useState(0);\r\n  const [pageSize, setPageSize] = React.useState(10);\r\n  const [columnWidths, setColumnWidths] = React.useState<any>([\r\n    { columnName: 'processDate', width: 180 },\r\n    { columnName: 'createdAt', width: 240 },\r\n    { columnName: 'actionType', width: 180 },\r\n    { columnName: 'amount', width: 180 },\r\n    { columnName: 'description', width: 300 }\r\n  ]);\r\n\r\n  // Add New Hooks\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedDate, setSelectedDate] = React.useState<Date | null>(new Date('2020-01-02'));\r\n  const [action, setAction] = React.useState<string>('');\r\n  const [amount, setAmount] = React.useState<string>('');\r\n  const [description, setDescription] = React.useState<string>('');\r\n\r\n  const getBalances = async () => {\r\n    let save = await apis.getSavingsBalance(username);\r\n    setSavings(save.data.data[0].amount);\r\n  }\r\n\r\n  const getRows = async () => {\r\n    let savingRows = await apis.getSavings(username);\r\n    const row = savingRows.data.data;\r\n    return setRows(row);\r\n  }\r\n\r\n  const columns = [\r\n    { name: 'processDate', title: 'Process Date' },\r\n    { name: 'createdAt', title: 'Created On' },\r\n    { name: 'actionType', title: 'Action' },\r\n    { name: 'amount', title: 'Amount' },\r\n    { name: 'description', title: 'Description' }\r\n  ];\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleActionChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setAction(event.target.value as string);\r\n  };\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleAmountChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setAmount(event.target.value as string);\r\n  };\r\n\r\n  const handleDescriptionChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setDescription(event.target.value as string);\r\n  };\r\n\r\n  const negativeValue = (value: any) => {\r\n    const minus = '-';\r\n    if (action === \"Withdrawal\") {\r\n      const newValue = minus.concat(value);\r\n      return newValue;\r\n    }\r\n    else {\r\n      return value\r\n    }\r\n  }\r\n\r\n  const addNewTransaction = () => {\r\n    const form: FormProps = {\r\n      amount: negativeValue(amount),\r\n      description: description,\r\n      processDate: selectedDate,\r\n      actionType: action\r\n    }\r\n    apis.createMoneyMarket(form, username)\r\n    window.location.reload();\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    getBalances();\r\n    getRows();\r\n  }, [])\r\n\r\n  return (\r\n    <Paper elevation={0} className={paper}>\r\n      <Typography variant='h5'>Savings Account</Typography>\r\n      <Divider className={divider} />\r\n      <Paper elevation={5} className={gridMargin}>\r\n        <Grid rows={rows} columns={columns}>\r\n          <FilteringState filters={filters} onFiltersChange={setFilters} />\r\n          <PagingState\r\n            currentPage={currentPage}\r\n            onCurrentPageChange={setCurrentPage}\r\n            pageSize={pageSize}\r\n            onPageSizeChange={setPageSize} />\r\n          <IntegratedFiltering />\r\n          <SortingState\r\n            sorting={sorting}\r\n            onSortingChange={setSorting}\r\n          />\r\n          <IntegratedSorting />\r\n          <IntegratedPaging />\r\n          <Table />\r\n          <TableColumnResizing\r\n            columnWidths={columnWidths}\r\n            onColumnWidthsChange={setColumnWidths}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <TableFilterRow />\r\n          <PagingPanel pageSizes={pageSizes} />\r\n          <Toolbar variant='dense'>\r\n            <Typography variant='subtitle1'>Available Balance: $</Typography>\r\n            <Typography className={balance}>{savings}</Typography>\r\n            <Tooltip title='Add New'>\r\n              <IconButton className={addNewButton} onClick={handleOpen}>\r\n                <AddCircle />\r\n              </IconButton>\r\n            </Tooltip>\r\n            {rows.length > 0 ?\r\n              <CSVLink\r\n                className={downloadButton}\r\n                data={rows}\r\n                filename={\"Savings-Transactions.csv\"}\r\n                uFEFF={false}\r\n                target='_blank'\r\n              >\r\n                <Tooltip title='Download Transactions'>\r\n                  <IconButton className={addNewButton}>\r\n                    <GetApp />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </CSVLink>\r\n              : null\r\n            }\r\n          </Toolbar>\r\n        </Grid>\r\n      </Paper >\r\n      {/* Add New Form */}\r\n      < Dialog open={open} onClose={handleClose} >\r\n        <DialogTitle>Add New Transaction</DialogTitle>\r\n        <DialogContent>\r\n          <Layout container justify='center' className={layoutMargin}>\r\n            <Layout container justify='space-around'>\r\n              <TextField label='Account' value='Money Market' disabled />\r\n              <TextField label='Amount' type='number' value={amount} onChange={handleAmountChange} />\r\n            </Layout>\r\n            <Layout container justify='space-around' className={layoutMargin}>\r\n              <FormControl className={combobox}>\r\n                <InputLabel id='action'>Action</InputLabel>\r\n                <Select labelId='action' value={action} onChange={handleActionChange}>\r\n                  <MenuItem value={'Withdrawal'}>Withdrawal</MenuItem>\r\n                  <MenuItem value={'Deposit'}>Deposit</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                  disableToolbar\r\n                  variant=\"inline\"\r\n                  format=\"MM/dd/yyyy\"\r\n                  margin=\"normal\"\r\n                  id=\"date-picker-inline\"\r\n                  placeholder=\"Date picker inline\"\r\n                  value={selectedDate}\r\n                  onChange={handleDateChange}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Layout>\r\n            <TextField\r\n              label=\"Description\"\r\n              fullWidth\r\n              className={layoutMargin}\r\n              value={description}\r\n              onChange={handleDescriptionChange} />\r\n          </Layout>\r\n        </DialogContent>\r\n        <DialogActions className={actionMargin}>\r\n          <Button onClick={handleClose} variant='outlined'> Cancel</Button>\r\n          <Button variant='contained' color='primary' onClick={addNewTransaction}>Add</Button>\r\n        </DialogActions>\r\n      </Dialog >\r\n    </Paper >\r\n  )\r\n}\r\n\r\nexport default SavingsDetail","import React from 'react'\r\nimport { Divider, Paper, Typography } from '@material-ui/core'\r\nimport { makeStyles, createStyles } from '@material-ui/styles';\r\nimport store from \"store\";\r\nimport apis from '../../api';\r\n\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    paper: {\r\n      padding: '1rem',\r\n      height: '100%'\r\n    },\r\n    divider: {\r\n      marginTop: '1rem',\r\n      marginBottom: '2rem'\r\n    }\r\n  })\r\n);\r\n\r\nconst CheckingDetail = () => {\r\n  // styles\r\n  const { paper, divider } = useStyles()\r\n\r\n  // Hooks\r\n  const [checking, setChecking] = React.useState(0);\r\n\r\n  const username = store.get('username');\r\n\r\n  const getBalances = async () => {\r\n    let check = await apis.getMoneyMarketBalance(username);\r\n    setChecking(check.data.data[0].amount);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    getBalances();\r\n  })\r\n\r\n  return (\r\n    <Paper elevation={0} className={paper}>\r\n      <Typography variant='h5'>Checking Account</Typography>\r\n      <Divider className={divider} />\r\n      {checking}\r\n    </Paper >\r\n  )\r\n}\r\n\r\nexport default CheckingDetail\r\n","import React from 'react'\r\nimport {\r\n  Divider,\r\n  Paper,\r\n  Grid as Layout,\r\n  Typography,\r\n  Button,\r\n  IconButton,\r\n  FormControl,\r\n  Toolbar,\r\n  MenuItem,\r\n  Tooltip,\r\n  TextField,\r\n  Select,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  InputLabel\r\n} from '@material-ui/core'\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableHeaderRow,\r\n  TableColumnResizing,\r\n  TableFilterRow,\r\n  PagingPanel\r\n} from '@devexpress/dx-react-grid-material-ui';\r\nimport {\r\n  IntegratedSorting,\r\n  SortingState,\r\n  IntegratedFiltering,\r\n  FilteringState,\r\n  PagingState,\r\n  IntegratedPaging\r\n} from '@devexpress/dx-react-grid';\r\nimport { CSVLink } from \"react-csv\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { AddCircle, GetApp } from '@material-ui/icons';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport { makeStyles, createStyles } from '@material-ui/styles';\r\nimport store from \"store\";\r\nimport apis from '../../api';\r\nimport { Theme } from '../../components';\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    paper: {\r\n      padding: '1rem',\r\n      height: '100%'\r\n    },\r\n    gridMargin: {\r\n      margin: '0 1rem 1rem 1rem'\r\n    },\r\n    divider: {\r\n      marginTop: '1rem',\r\n      marginBottom: '2rem'\r\n    },\r\n    balance: {\r\n      color: Theme.palette.primary.main,\r\n      fontWeight: 700,\r\n      flexGrow: 1\r\n    },\r\n    addNewButton: {\r\n      marginTop: '.5rem',\r\n      color: Theme.palette.primary.main\r\n    },\r\n    combobox: {\r\n      width: '40%'\r\n    },\r\n    layoutMargin: {\r\n      marginTop: '1.5rem'\r\n    },\r\n    actionMargin: {\r\n      margin: '1rem'\r\n    },\r\n    downloadButton: {\r\n      color: Theme.palette.primary.main\r\n    },\r\n  })\r\n);\r\n\r\nexport interface FormProps {\r\n  amount: any,\r\n  description: any,\r\n  processDate: any,\r\n  actionType: any\r\n}\r\n\r\nconst MoneyMarketDetail = () => {\r\n  // styles\r\n  const { paper, divider, balance, addNewButton, combobox, downloadButton, layoutMargin, actionMargin, gridMargin } = useStyles()\r\n\r\n  const username = store.get('username');\r\n\r\n  // Grid Hooks\r\n  const [moneyMarket, setMoneyMarket] = React.useState(0);\r\n  const [rows, setRows] = React.useState([]);\r\n  const [sorting, setSorting] = React.useState<any>([])\r\n  const [filters, setFilters] = React.useState<any>([]);\r\n  const [pageSizes] = React.useState<number[]>([5, 10, 15, 25]);\r\n  const [currentPage, setCurrentPage] = React.useState(0);\r\n  const [pageSize, setPageSize] = React.useState(10);\r\n  const [columnWidths, setColumnWidths] = React.useState<any>([\r\n    { columnName: 'processDate', width: 180 },\r\n    { columnName: 'createdAt', width: 240 },\r\n    { columnName: 'actionType', width: 180 },\r\n    { columnName: 'amount', width: 180 },\r\n    { columnName: 'description', width: 300 }\r\n  ]);\r\n\r\n  // Add New Hooks\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedDate, setSelectedDate] = React.useState<Date | null>(new Date('2020-01-02'));\r\n  const [action, setAction] = React.useState<string>('');\r\n  const [amount, setAmount] = React.useState<string>('');\r\n  const [description, setDescription] = React.useState<string>('');\r\n\r\n  const getBalances = async () => {\r\n    let money = await apis.getMoneyMarketBalance(username);\r\n    setMoneyMarket(money.data.data[0].amount);\r\n  }\r\n\r\n  const getRows = async () => {\r\n    let moneyRows = await apis.getMoneyMarket(username);\r\n    const row = moneyRows.data.data;\r\n    return setRows(row);\r\n  }\r\n\r\n  const columns = [\r\n    { name: 'processDate', title: 'Process Date' },\r\n    { name: 'createdAt', title: 'Created On' },\r\n    { name: 'actionType', title: 'Action' },\r\n    { name: 'amount', title: 'Amount' },\r\n    { name: 'description', title: 'Description' }\r\n  ];\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleActionChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setAction(event.target.value as string);\r\n  };\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleAmountChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setAmount(event.target.value as string);\r\n  };\r\n\r\n  const handleDescriptionChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setDescription(event.target.value as string);\r\n  };\r\n\r\n  const negativeValue = (value: any) => {\r\n    const minus = '-';\r\n    if (action === \"Withdrawal\") {\r\n      const newValue = minus.concat(value);\r\n      return newValue;\r\n    }\r\n    else {\r\n      return value\r\n    }\r\n  }\r\n\r\n  const addNewTransaction = () => {\r\n    const form: FormProps = {\r\n      amount: negativeValue(amount),\r\n      description: description,\r\n      processDate: selectedDate,\r\n      actionType: action\r\n    }\r\n    apis.createMoneyMarket(form, username)\r\n    window.location.reload();\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    getBalances();\r\n    getRows();\r\n  }, [])\r\n\r\n  return (\r\n    <Paper elevation={0} className={paper}>\r\n      <Typography variant='h5'>Money Market Account</Typography>\r\n      <Divider className={divider} />\r\n      <Paper elevation={5} className={gridMargin}>\r\n        <Grid rows={rows} columns={columns}>\r\n          <FilteringState filters={filters} onFiltersChange={setFilters} />\r\n          <PagingState\r\n            currentPage={currentPage}\r\n            onCurrentPageChange={setCurrentPage}\r\n            pageSize={pageSize}\r\n            onPageSizeChange={setPageSize} />\r\n          <IntegratedFiltering />\r\n          <SortingState\r\n            sorting={sorting}\r\n            onSortingChange={setSorting}\r\n          />\r\n          <IntegratedSorting />\r\n          <IntegratedPaging />\r\n          <Table />\r\n          <TableColumnResizing\r\n            columnWidths={columnWidths}\r\n            onColumnWidthsChange={setColumnWidths}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <TableFilterRow />\r\n          <PagingPanel pageSizes={pageSizes} />\r\n          <Toolbar variant='dense'>\r\n            <Typography variant='subtitle1'>Available Balance: $</Typography>\r\n            <Typography className={balance}>{moneyMarket}</Typography>\r\n            <Tooltip title='Add New'>\r\n              <IconButton className={addNewButton} onClick={handleOpen}>\r\n                <AddCircle />\r\n              </IconButton>\r\n            </Tooltip>\r\n            {rows.length > 0 ?\r\n              <CSVLink\r\n                className={downloadButton}\r\n                data={rows}\r\n                filename={\"Money-Market-Transactions.csv\"}\r\n                uFEFF={false}\r\n                target='_blank'\r\n              >\r\n                <Tooltip title='Download Transactions'>\r\n                  <IconButton className={addNewButton}>\r\n                    <GetApp />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </CSVLink>\r\n              : null\r\n            }\r\n          </Toolbar>\r\n        </Grid>\r\n      </Paper >\r\n      {/* Add New Form */}\r\n      < Dialog open={open} onClose={handleClose} >\r\n        <DialogTitle>Add New Transaction</DialogTitle>\r\n        <DialogContent>\r\n          <Layout container justify='center' className={layoutMargin}>\r\n            <Layout container justify='space-around'>\r\n              <TextField label='Account' value='Money Market' disabled />\r\n              <TextField label='Amount' type='number' value={amount} onChange={handleAmountChange} />\r\n            </Layout>\r\n            <Layout container justify='space-around' className={layoutMargin}>\r\n              <FormControl className={combobox}>\r\n                <InputLabel id='action'>Action</InputLabel>\r\n                <Select labelId='action' value={action} onChange={handleActionChange}>\r\n                  <MenuItem value={'Withdrawal'}>Withdrawal</MenuItem>\r\n                  <MenuItem value={'Deposit'}>Deposit</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                  disableToolbar\r\n                  variant=\"inline\"\r\n                  format=\"MM/dd/yyyy\"\r\n                  margin=\"normal\"\r\n                  id=\"date-picker-inline\"\r\n                  placeholder=\"Date picker inline\"\r\n                  value={selectedDate}\r\n                  onChange={handleDateChange}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Layout>\r\n            <TextField\r\n              label=\"Description\"\r\n              fullWidth\r\n              className={layoutMargin}\r\n              value={description}\r\n              onChange={handleDescriptionChange} />\r\n          </Layout>\r\n        </DialogContent>\r\n        <DialogActions className={actionMargin}>\r\n          <Button onClick={handleClose} variant='outlined'> Cancel</Button>\r\n          <Button variant='contained' color='primary' onClick={addNewTransaction}>Add</Button>\r\n        </DialogActions>\r\n      </Dialog >\r\n    </Paper >\r\n  )\r\n}\r\n\r\nexport default MoneyMarketDetail\r\n","import React from 'react';\r\nimport NavBar from '../components/NavBar';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport LoginForm from '../Pages/login/LoginForm';\r\nimport RegistrationForm from '../Pages/registration/RegistrationForm';\r\nimport DashBoard from '../Pages/dashboard/dashboard';\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport { Theme } from '../components/Theme';\r\nimport SavingsDetail from '../Pages/accounts-detail/savings-detail.container';\r\nimport CheckingDetail from '../Pages/accounts-detail/checking-detail.container';\r\nimport MoneyMarketDetail from '../Pages/accounts-detail/money-market-detail.container';\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <Router>\r\n      <ThemeProvider theme={Theme}>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={LoginForm} />\r\n          <Route path=\"/register\" exact component={RegistrationForm} />\r\n          <Route path=\"/dashboard\" exact component={DashBoard} />\r\n          <Route path=\"/savings\" exact component={SavingsDetail} />\r\n          <Route path=\"/checking\" exact component={CheckingDetail} />\r\n          <Route path=\"/moneyMarket\" exact component={MoneyMarketDetail} />\r\n        </Switch>\r\n      </ThemeProvider>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './app'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}